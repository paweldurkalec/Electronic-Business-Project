<?php

require_once __DIR__.'/AdminFreshmailBase.php';

class AdminFreshmailFollowUpController extends AdminFreshmailBaseController
{
    const TPL_DIR = 'PrestaShop';

    const TPL_CATEGORY = 5;

    public function __construct()
    {
        $this->bootstrap = true;
        $this->display = 'edit';

        parent::__construct();
    }

    public function renderForm()
    {
        $form = '';

        for ($i=1; $i<=(int)\FreshMail\FollowUps::NUM_FOLLOW_UPS; $i++){
            $this->submit_action = $this->display . $this->identifier;
            $this->show_form_cancel_button = false;

            $this->fields_form = [
                'legend' => [
                    'title' => $this->module->l('Return to Store Notifications'). " ( $i )",
                ],
                'input' => [

                ],
                'submit' => [
                    'name' => 'submitFreshmailFollowUp',
                    'title' => $this->module->l('Save'),
                    'class' => 'btn btn-default pull-right'
                ],
            ];

            $this->fields_value = $this->getFollowUpFieldsValue($i);
            $form .= $this->extendForm($i) . parent::renderForm();
        }

        return $form  . $this->extendedInfo();
    }

    public function postProcess()
    {
        if(isset($_POST['submitFreshmailFollowUp'])){
            $idFollowUp = (int)Tools::getValue('follow_up');
            $followUp = \FreshMail\Entity\EmailTemplate::getByType('follow_up'.$idFollowUp);

            Configuration::updateValue(
                \FreshMail\FollowUps::CONFIG_KEY_ACTIVE.$idFollowUp,
                (bool)Tools::getValue('enable_'.$idFollowUp, 0),
                false, null, $this->context->shop->id
            );
            Configuration::updateValue(
                \FreshMail\FollowUps::CONFIG_KEY_SEND_AFTER.$idFollowUp,
                (int)Tools::getValue('send_after'),
                false, null, $this->context->shop->id
            );
            Configuration::updateValue(
                \FreshMail\FollowUps::CONFIG_KEY_DISCOUNT_TYPE.$idFollowUp,
                Tools::getValue('discount_type'),
                false, null, $this->context->shop->id
            );
            Configuration::updateValue(
                \FreshMail\FollowUps::CONFIG_KEY_DISCOUNT_LIFETIME.$idFollowUp,
                (int)Tools::getValue('discount_lifetime'),
                false, null, $this->context->shop->id
            );
            Configuration::updateValue(
                \FreshMail\FollowUps::CONFIG_KEY_DISCOUNT_CODE.$idFollowUp,
                Tools::getValue('discount_code'),
                false, null, $this->context->shop->id
            );
            Configuration::updateValue(
                \FreshMail\FollowUps::CONFIG_KEY_DISCOUNT_PERCENT.$idFollowUp,
                (int)Tools::getValue('discount_percent'),
                false, null, $this->context->shop->id
            );

            if(isset($_POST['followup_tpl'])){
                $followUp->tpl = Tools::getValue('followup_tpl');
            }

            foreach (Language::getIDs(false) as $id_lang) {
                if (isset($_POST['content_'.$id_lang])) {
                    $followUp->content[$id_lang] = $_POST['content_'.$id_lang];
                }
                if (isset($_POST['email_subject_'.$id_lang])) {
                    $followUp->email_subject[$id_lang] = $_POST['email_subject_'.$id_lang];
                }
            }

            if(!Validate::isLoadedObject($followUp)){
                $followUp->id_shop = $this->context->shop->id;
            }
            $followUp->save();
        }
        return parent::postProcess(); // TODO: Change the autogenerated stub
    }

    private function extendForm($item){
        $this->warnings[] = $this->module->l('Full functionality requires setting a periodic task: ').' '
            . $this->context->link->getBaseLink().'modules/freshmail/cron/followup.php?token='.$this->module->getCronToken()
            . '<br>' .$this->module->l('or use cli').': '. _PS_MODULE_DIR_ . 'freshmail/cron/followup.php'
        ;


        $this->fields_form['input'][] = [
            'type' => 'hidden',
            'name' => 'follow_up'
        ];

        $this->fields_form['input'][] = [
            'type' => 'switch',
            'label' => $this->module->l('Enable'),
            'name' => 'enable_'.$item,
            'required' => true,
            'class' => 'switch prestashop-switch',
            'is_bool' => true,
            'values' => [
                [
                    'id' => 'active_on_'.$item,
                    'value' => 1,
                    'label' => $this->module->l('Enabled')
                ],
                [
                    'id' => 'active_off_'.$item,
                    'value' => 0,
                    'label' => $this->module->l('Disabled')
                ]
            ],
        ];

        $this->fields_form['input'][] = [
            'type' => 'text',
            'label' => $this->module->l('Send after'),
            'name' => 'send_after',
            'desc' => $this->module->l('Days numbers from last order'),
        ];

        $this->fields_form['input'][] = [
            'type' => 'select',
            'label' => $this->module->l('Template'),
            'desc' => $this->module->l('Lists of templates defined in the Freshmail application'),
            'name' => 'followup_tpl',
            'multiple' => false,
            'required' => true,
            'options' => [
                'query' => $this->getTpl(), //$lists,
                'id' => 'id_hash',
                'name' => 'name'
            ]
        ];

        $this->fields_form['input'][] = [
            'type' => 'select',
            'label' => $this->module->l('Discount code'),
            'name' => 'discount_type',
            'multiple' => false,
            'required' => true,
            'options' => [
                'query' => $this->discountsTypes(), //$lists,
                'id' => 'id',
                'name' => 'name'
            ],
            'id' => 'fm-discount-type-'.$item,
            'class' => 'fm-discount-type fm-follow-'.$item
        ];

        $this->fields_form['input'][] = [
            'type' => 'text',
            'label' => $this->module->l('Percentage discount'),
            'name' => 'discount_percent',
            'class' => 'fm-class fm-percent fm-group-'.$item,
        ];

        $this->fields_form['input'][] = [
            'type' => 'text',
            'label' => $this->module->l('The period of validity discount code'),
            'name' => 'discount_lifetime',
            'desc' => $this->module->l('In hours'),
            'class' => 'fm-class fm-percent fm-group-'.$item,
        ];

        $this->fields_form['input'][] = [
            'type' => 'text',
            'label' => $this->module->l('Discount code'),
            'name' => 'discount_code',
            'class' => 'fm-class fm-code fm-group-'.$item,
        ];

        $this->fields_form['input'][] = [
            'type' => 'text',
            'label' => $this->module->l('Email subject'),
            'name' => 'email_subject',
            //'autoload_rte' => true,
            'lang' => true,
        ];
        $this->fields_form['input'][] = [
            'type' => 'textarea',
            'label' => $this->module->l('Description'),
            'name' => 'content',
            'autoload_rte' => true,
            'lang' => true,
            'id' => 'content_'.$item,
            'hint' => '{content}'
        ];

    }

    private function extendedInfo()
    {
        $templateFile = _PS_MODULE_DIR_ . $this->module->name . '/views/templates/admin/followup.tpl';
        return $this->context->smarty->fetch($templateFile);

    }

    public function getTpl()
    {
        parent::init();

        $tplList = [
            ['id_hash' => '', 'name' => $this->module->l('Choose')]
        ];
        if(!empty($this->freshmail) && $this->freshmail->check()){
            $this->freshmail->getEmailsTemplates(self::TPL_DIR);
            $tpls = $this->freshmail->getEmailsTemplates(self::TPL_DIR);
            \FreshMail\Tools::filterTplByCategory($tpls, self::TPL_CATEGORY);

            $tplList = array_merge($tplList, $tpls );
        }

        return $tplList;
    }

    private function getFollowUpFieldsValue($idFollowUp){
        $followUp = \FreshMail\Entity\EmailTemplate::getByType('follow_up'.$idFollowUp);

        $fieldsValue = [
            'follow_up' => $idFollowUp,
            'enable_'.$idFollowUp => Configuration::get(\FreshMail\FollowUps::CONFIG_KEY_ACTIVE.$idFollowUp, null, null, $this->context->shop->id),
            'followup_tpl' => $followUp->tpl,
            'content' => $followUp->content,
            'email_subject' => $followUp->email_subject,
            'send_after' =>  Configuration::get(\FreshMail\FollowUps::CONFIG_KEY_SEND_AFTER.$idFollowUp, null, null, $this->context->shop->id),
            'discount_type' =>  Configuration::get(\FreshMail\FollowUps::CONFIG_KEY_DISCOUNT_TYPE.$idFollowUp, null, null, $this->context->shop->id),
            'discount_percent' =>  Configuration::get(\FreshMail\FollowUps::CONFIG_KEY_DISCOUNT_PERCENT.$idFollowUp, null, null, $this->context->shop->id),
            'discount_lifetime' =>  Configuration::get(\FreshMail\FollowUps::CONFIG_KEY_DISCOUNT_LIFETIME.$idFollowUp, null, null, $this->context->shop->id),
            'discount_code' =>  Configuration::get(\FreshMail\FollowUps::CONFIG_KEY_DISCOUNT_CODE.$idFollowUp, null, null, $this->context->shop->id),
        ];

        return $fieldsValue;
    }

    private function discountsTypes()
    {
        return [
            ['id' => \FreshMail\FollowUps::DISCOUNT_NONE, 'name' => $this->module->l('I dont want to grant a discount')],
            ['id' => \FreshMail\FollowUps::DISCOUNT_PERCENT, 'name' => $this->module->l('Discount value')],
            ['id' => \FreshMail\FollowUps::DISCOUNT_CODE, 'name' => $this->module->l('Own discount code')],
        ];
    }
}
